module ProjectEuler.Problems where

import Common.Fibonacci (fibFast)

-- | Given an number sum the natural numbers that are multiples of 3 or 5 up to,
-- but not including the given number.
--
-- Problem statement:
-- "If we list all the natural numbers below 10 that are multiples of 3 or 5, we
-- get 3, 5, 6 and 9. The sum of these multiples is 23. Find the sum of all the
-- multiples of 3 or 5 below 1000."
sol1 :: Int -> Int
sol1 n = sum [ x | x <- [1 .. (n - 1)], x `mod` 3 == 0 || x `mod` 5 == 0 ]

-- Each new term in the Fibonacci sequence is generated by adding the previous
-- two terms. By starting with 1 and 2, the first 10 terms will be:

-- 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

-- By considering the terms in the Fibonacci sequence whose values do not exceed
-- four million, find the sum of the even-valued terms.
sol2 :: Integer
sol2 = sum $ takeWhile (< 4000000) $ filter even $ fmap fibFast [0 ..]
